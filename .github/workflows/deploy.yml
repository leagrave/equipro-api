name: CI_CD_Node_Render

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Type de release'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  actions: write
  checks: write

jobs:
  setup_node:
    name: Setup Node.js
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

  run_tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup_node
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Run Tests
        run: |
          set -o pipefail
          npm test
        continue-on-error: false

  bump_version:
    name: Bump Node.js Version
    runs-on: ubuntu-latest
    needs: run_tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Determine version bump
        id: determine_version
        run: |
          TYPE="${{ github.event.inputs.version }}"
          if [ -z "$TYPE" ]; then
            TYPE="patch"
          fi
          echo "Bump type: $TYPE"
          echo "BUMP_TYPE=$TYPE" >> $GITHUB_ENV

      - name: Increment version
        id: version
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          NEW_VERSION=$(npm version $BUMP_TYPE -m "chore(release): %s [ci skip]")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "Nouvelle version : $NEW_VERSION"

      - name: Update version.json
        run: |
          node scripts/updateVersion.js "${{ env.NEW_VERSION }}" "build" "Build r√©ussi"

      - name: Update changelog
        run: |
          node scripts/updateChangelog.js "${{ env.NEW_VERSION }}"

      - name: Commit updated files
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add package.json package-lock.json CHANGELOG.md version.json
          git commit -m "chore: update changelog and bump to ${{ env.NEW_VERSION }} [ci skip]" || echo "No changes to commit"
          git push origin main --follow-tags
